PPv enhancements

Author: tar80 <tar80master@google.com>
License: MIT License
Repository: https://github.com/tar80/ppm-view
===============================================================================

PPvの閲覧・操作を強化します。

・PPvのプロセス毎にワーカスクリプトを常駐
・カーソル位置に合わせてPPvの位置を自動調整
・PPvの隠しメニュー・マウス操作を動的に変更
・窓数に合わせた連動ビューの起動
・Batを使って構文ハイライト
・ラップ・最全面・透明度・背景画像のトグルキー
・ファイル内検索の強化
・履歴機能とブックマーク
・しおり機能の数字キーへの割り当て
・カーソル下のURIを抽出
・指定範囲を選択
・ViLikeKeys/カウンタ機能/Visual-mode

===============================================================================
動作環境

使用モジュール
	PPx key module
	PPx window module
	PPx position module
	PPx text module

===============================================================================
構成ファイルの説明

	dist\actionUri.js		カーソル下のURIを抽出してコマンドに渡す
	dist\deleteThis.js		閲覧中のファイルを削除
		通常ファイルはSafeDeleteを実行
		書庫内ファイルはzipのみ、7-zip64.dllを使って削除する
	dist\extractCursorWord.js	カーソル下の単語を抽出
	dist\findNext.js		検索語への単語単位カーソル移動
	dist\findWord.js		*find強化版
	dist\getSyntaxDocument		構文ハイライトの適用
	dist\launchPPv.js		PPvを起動
	dist\openArchDoc.js		書庫内ドキュメントを列挙
	dist\selectText.js		指定した範囲の文字列を選択
	dist\syncView.js		連動ビューを制御
	dist\toggleBgImg.js		背景画像をトグル
	dist\workerPPv.stay.js		PPvのプロセスに常駐して操作を補助

===============================================================================
テーブル情報

M_ppmViewRecent	閲覧履歴のリスト

K_ppmViVG	オペレータGのキーバインド

===============================================================================
ユーザーコマンド

	*ppmVsync	非連動ビューPPvでも擬似的にPPcと連動する

===============================================================================
デフォルトキー設定 ※()で括られたキーはコメントアウト

	PPc
		N		ビューア拡張子判別
		Y		連動ビュートグル

	PPv
		Y		連動ビュートグル
		B		前方検索
		F		後方検索
		[		単語単位前方検索
		]		単語単位後方検索
		@		書庫内ドキュメント閲覧
		E		(画像)エディタ起動
		SHIFT+E		PPe起動
		0		閲覧履歴リスト
		SHIFT+0		ブックマーク追加
		F12		ラップ状態のトグル
		CTRL+O		透明度二段階トグル
		CTRL+T		最全面表示トグル
		CTRL+SHIFT+D	閲覧中のファイルを削除(safedelete)
		(CTRL+Z)	ファイル操作のアンドゥ 要ppm-fileopration
		F5		構文ハイライトを考慮して再読み込み
		CTRL+F5		強制Bat出力読み込み
		SHIFT+UP	疑似連動ビュー前のファイル
		SHIFT+DOWN	疑似連動ビュー次のファイル
		SHIFT+LFET	疑似連動ビュー左のファイル
		SHIFT+RIGHT	疑似連動ビュー右のファイル
		CTRL+SHIFT+UP	前のファイルを構文ハイライト付きで開く
		CTRL+SHIFT+DOWN	次のファイルを構文ハイライト付きで開く
		SPACE		疑似連動ビュー選択後、次のファイル
		SHIFT+SPACE	疑似連動ビュー選択後、前のファイル
		(C)		原寸表示
		(X)		縮小
		(Z)		拡大
	(キャレットモード)
		*		カーソル下単語ハイライト
		Y		連動ビュートグル
				Visual-mode中は範囲コピー
		SHIFT+Y		行コピー
		V		Visual-modeトグル
		(1-4)		しおり1-4に移動
		(SHIFT+1-4)	しおり1-4に登録
	(ViLikeKeys)
		(:)		コマンド一行編集
		(CTRL+[)	検索ハイライト解除
		(HJKL)		左上下右移動
		(SHIFT+HJKL)	画面スクロール
		(G)		オペレーターG
		(SHIFT+G)	ファイル末に移動
		(N)		次の検索候補
		(SHIFT+N)	前の検索候補
	(Gオペレータ)
		(1-9)		カウンタ
		(HJKL)		左上下右移動
		(SHIFT+HJKL)	画面スクロール
		(A)		行頭へ移動
		(E)		行末へ移動
		(F)		カーソル下にあるURIをPPvで開く
		(G)		ファイル頭へ移動
				カウンタが1以上のときは行ジャンプ
		(S)		カーソル下にあるURIを選択
		(X)		カーソル下にあるURLをブラウザで開く
		(:)		最後に一行編集で実行したコマンドを再実行
		(I)		直近の範囲を選択
		(A)		直近の範囲を区切りを含めて選択
		(W)		単語選択
		(SHIFT+W)	スペースで区切られた範囲を選択
		("'`,{[(<)	記号切られた範囲を選択

===============================================================================
workerPPv.stay.js
インスタンス番号:80120

KV_main:FIRSTEVENTから実行され、PPvのIDごとに常駐します。
起動時に%sp'workerPPv'を設定します。

関数の説明
ppx_resume(dodge, tmod?, xwin?, winpos?, debugMode = '') => void
 workerPPv.stay.jsの再実行時に実行されます
 1-4までの引数はLaunchPPv.js,getSyntaxDocument.jsがスクリプト内で設定します
	@arg 0 {string} 1を設定したときPPvがカーソルを左右に避けます
	@arg 1 {string} 起動前のXV_tmodの値を指定
	@arg 2 {string} 起動前のXwin:Vの値を指定
	@arg 3 {string} 起動前の_WinPos:<ID>の値を指定
	@arg 4 {string} "DEBUG"が指定されたときデバッグメッセージを表示します

ppx_GetValue(key: CacheKeys) => string|boolean
 CacheKeysの値を返します

ppx_Dodge() => void
 Dodge-PPvを実行します

ppx_ToggleDodge() => void
 Dodge-PPvの有効無効を切り替え、メッセージを表示します

ppx_ToggleWrap() => void
 wrap状態の有効無効を切り替え、メッセージを表示します

ppx_ToggleTopmost() => void
 topmostの有効無効を切り替え、メッセージを表示します

ppx_SyntaxUpdate(batOption: string) => void
 表示中のファイルにBatの構文ハイライトを適用します
 \F5更新時にgetSyntaxDocument.jsにより実行されます
	@arg 0 {string} Batのオプションを指定できます

ppx_Close(syncOff: string): void
 PPvの終了時にKV_main:CLOSEEVENTにより実行されます
 連動ビュー表示前のタイトルバー、位置情報を復元をします
	@arg 0 {string} "0"以外のとき、PPv終了時に連動ビューを解除します

型情報

type CacheKeys = {
	debugMode: string;
	idName: string;
	tmod: string;
	winpos: string;
	xwin: string;
	hasWrap: boolean;
	hasTopmost: boolean;
	viewtype: string;
	codepace: string;
	esc: boolean;
	mine: boolean;
	tab: boolean;
	animate: boolean;
	colorprofile: boolean;
}

===============================================================================

vim:tw=79:ts=8:sts=0:sw=4:norl:noet:fen:
